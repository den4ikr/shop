{"version":3,"sources":["lib/commerce.js","redux/cart-reducer.ts","componets/Cart/CartItem/CartItemStyle.js","componets/Cart/Cart.tsx","componets/Cart/CartContainer.tsx","componets/Header/HeaderStyle.js","componets/Header/Header.tsx","redux/list-reducer.ts","componets/List/ListStyle.js","componets/List/ListItem/ListItem.tsx","assets/Bean Eater-1s-200px.gif","componets/Preloader/PreloaderStyle.js","componets/Preloader/Preloader.tsx","componets/List/List.tsx","componets/List/ListContaier.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx"],"names":["commerce","Commerce","CART_SET_CART","CART_SET_SUBTOTAL","initialState","cart","subtotal","actions","type","getCart","dispatch","a","retrieve","response","line_items","formatted_with_symbol","CartReducer","state","action","makeStyles","row","display","flexWrap","justifyContent","root","width","marginTop","media","height","paddingTop","cardActions","cardContent","Cart","props","s","useStyle","length","style","map","c","Card","className","CardMedia","image","source","CardContent","Typography","variant","gutterBottom","name","price","CardActions","disableSpacing","IconButton","area-label","onClick","deleteFromCart","id","fontSize","paddingLeft","textAlign","connect","productId","remove","useEffect","useStyles","createUseStyles","headerWrapper","maxWidth","margin","alignItems","menu","paddingRight","Header","useSelector","to","aria-label","color","Badge","badgeContent","ShoppingCart","LIST_SET_LIST","list","ListReducer","ListItem","imageUrl","assets","url","dangerouslySetInnerHTML","__html","description","addToCart","AddShoppingCart","wrapper","position","imgBlock","Preloader","src","preloader","List","l","getList","products","data","add","App","exact","path","render","ListContaier","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43fec33c.chunk.js","sourcesContent":["import Commerce from \"@chec/commerce.js\";\r\n\r\nexport const commerce = new Commerce('pk_207749527a93c05ad3f561bce1cacd7ff97744a3a2c89', true);","import { CartResponseType } from './../types/types';\r\nimport { AppStateType } from './redux-store';\r\nimport { commerce } from \"../lib/commerce\";\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\nconst CART_SET_CART = \"CART_SET_CART\"\r\nconst CART_SET_SUBTOTAL = \"CART_SET_SUBTOTAL\"\r\n\r\nlet initialState = {\r\n    cart: [] as Array <CartResponseType>,\r\n    subtotal: \"0\",\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst CartReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case CART_SET_CART:\r\n            return { ...state, cart: action.cart }\r\n        case CART_SET_SUBTOTAL:\r\n            return { ...state, subtotal: action.subtotal }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype PropertiesType <T> = T extends { [key: string]: infer U } ? U : never\r\ntype ActionsTypes = ReturnType <PropertiesType <typeof actions> >\r\n\r\nconst actions = {\r\n    setCart: (cart: Array <CartResponseType>)  => ( { type: CART_SET_CART, cart } as const ),\r\n    setSubtotal: (subtotal: string) => ( { type: CART_SET_SUBTOTAL, subtotal } as const ),\r\n}\r\n\r\n\r\ntype ThunkType = ThunkAction <Promise <void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const getCart = (): ThunkType => async (dispatch) => {\r\n    const response = await commerce.cart.retrieve ()\r\n    dispatch (actions.setCart (response.line_items) )\r\n    dispatch ( actions.setSubtotal (response.subtotal.formatted_with_symbol) )\r\n}\r\n\r\nexport const addToCart = (productId: any): ThunkType => async (dispatch) => {\r\n    const response = await commerce.cart.add (productId)\r\n    dispatch ( actions.setCart (response.cart.line_items) )\r\n}\r\n\r\nexport const deleteFromCart = (productId: any): ThunkType => async (dispatch) => {\r\n    const response = await commerce.cart.remove (productId)\r\n    dispatch ( actions.setCart (response.cart.line_items) )\r\n    dispatch ( actions.setSubtotal (response.cart.subtotal.formatted_with_symbol) )\r\n}\r\n\r\nexport default CartReducer;","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles ( () => ({\r\n    row: {\r\n        display: 'flex',\r\n        flexWrap: \"wrap\",\r\n        justifyContent: 'space-around',  \r\n    },\r\n    root: {\r\n        width: \"350px\",\r\n        marginTop: \"100px\",\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"68.25%\",\r\n    },\r\n    cardActions: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    cardContent: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}) )","import { CartResponseType } from \"../../types/types\";\r\nimport {Card, CardActions, CardContent, CardMedia, IconButton, Typography} from \"@material-ui/core\"\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport useStyle from \"./CartItem/CartItemStyle\"\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\ntype CartPropsType = {\r\n    cart: Array <CartResponseType>,\r\n    subtotal: string,\r\n    deleteFromCart: (productId: number | string) => void,\r\n}\r\n\r\nconst Cart: React.FunctionComponent <CartPropsType> = (props) => {  \r\n    const s = useStyle ()\r\n\r\n    return (\r\n        <div>\r\n            {props.cart.length\r\n                ?   <div>\r\n                        <div style = {{ display: \"flex\", flexWrap: \"wrap\", justifyContent: 'space-around', }} >\r\n                            {props.cart.map (c => {            \r\n                                return (\r\n                                    <Card className={s.root} key={c.id} >\r\n                                        <CardMedia className={s.media} image={c.media.source} />\r\n                                        <CardContent>\r\n                                            <div className={s.cardContent} >\r\n                                                <Typography variant=\"h5\" gutterBottom >\r\n                                                    {c.name}\r\n                                                </Typography>\r\n                                                <Typography variant=\"h5\" >\r\n                                                    {c.price.formatted_with_symbol}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </CardContent>\r\n                                        <CardActions disableSpacing className={s.cardActions} >\r\n                                            <IconButton area-label=\"Add to cart\" onClick = { () => props.deleteFromCart (c.id) } >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div style = {{ fontSize: \"35px\", paddingTop: \"50px\", paddingLeft: \"15px\" ,}} >\r\n                            Subtotal: {props.subtotal}\r\n                        </div>\r\n                </div>\r\n                :   <div>\r\n                        <div style = {{ fontSize: \"55px\", textAlign: \"center\", paddingTop: \"50px\" ,}} >\r\n                            Your cart is empty ;)\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","import { connect } from \"react-redux\"\r\nimport { AppStateType } from \"../../redux/redux-store\"\r\nimport { getCart } from \"../../redux/cart-reducer\"\r\nimport { deleteFromCart } from \"../../redux/cart-reducer\"\r\nimport Cart from \"./Cart\"\r\nimport { useEffect } from \"react\"\r\nimport { CartResponseType } from \"../../types/types\"\r\n\r\ntype CartContainerPropsType = {\r\n    cart: Array <CartResponseType>,\r\n    subtotal: string,\r\n    getCart: () => void,\r\n    deleteFromCart: (productId: number | string) => void,\r\n}\r\n\r\nconst CartContainer: React.FunctionComponent <CartContainerPropsType> = (props) => {\r\n\r\n    useEffect ( () => {\r\n        props.getCart ()\r\n    }, [] )\r\n\r\n    return (\r\n        <Cart cart = {props.cart} deleteFromCart = {props.deleteFromCart} subtotal = {props.subtotal} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        cart: state.cart.cart,\r\n        subtotal: state.cart.subtotal\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, {getCart, deleteFromCart} )(CartContainer);","import {createUseStyles} from 'react-jss'\r\n\r\nconst useStyles  = createUseStyles ({\r\n    headerWrapper: {\r\n        maxWidth: \"1300px\",\r\n        margin: \"0 auto\",\r\n    },\r\n    row: {\r\n        display: \"flex\",\r\n        justifyContent: 'space-between',\r\n        height: \"100px\",\r\n        alignItems: 'center',\r\n    },\r\n    menu: {\r\n        paddingLeft: \"10px\",\r\n    },\r\n    cart: {\r\n        paddingRight: \"10px\",\r\n    }\r\n})\r\n\r\nexport default useStyles;","import { Badge, IconButton } from \"@material-ui/core\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport useStyles from \"./HeaderStyle\";\r\n\r\nconst Header: React.FunctionComponent = (props) => {\r\n    const s = useStyles ();\r\n    const cart = useSelector ( (state: AppStateType) => state.cart.cart )\r\n\r\n    return (\r\n       <div className = {s.headerWrapper} >\r\n            <div className = {s.row} >\r\n                <div className = {s.menu} >\r\n                    <NavLink to = \"/\" >\r\n                        MAIN\r\n                    </NavLink>\r\n                </div>\r\n                <div className = {s.cart} >\r\n                    <NavLink to = \"/cart\" >\r\n                        <IconButton aria-label = \"Show cart items\" color = \"inherit\" >\r\n                            <Badge badgeContent = {cart.length} color = \"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import { AppStateType } from './redux-store';\r\nimport { ListResponseType } from './../types/types';\r\nimport { commerce } from \"../lib/commerce\";\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\nconst LIST_SET_LIST = \"LIST_SET_LIST\"\r\n\r\nconst initialState = {\r\n    list: [] as Array <ListResponseType>\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst ListReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case LIST_SET_LIST:\r\n            return { ...state, list: action.list }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionsTypes = SetListType\r\n\r\nexport const setList = (list: Array <ListResponseType>): SetListType => ( { type: LIST_SET_LIST, list } as const )\r\ntype SetListType = {\r\n    list: Array <ListResponseType>,\r\n    type: typeof LIST_SET_LIST\r\n}\r\n\r\ntype ThunkType = ThunkAction <Promise <void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const getList = (): ThunkType => async (dispatch) => {\r\n    const response = await commerce.products.list ();\r\n    dispatch ( setList (response.data) )\r\n}\r\n\r\nexport default ListReducer;","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles ( () => ({\r\n    row: {\r\n        display: 'flex',\r\n        flexWrap: \"wrap\",\r\n        justifyContent: 'space-around',  \r\n    },\r\n    root: {\r\n        width: \"350px\",\r\n        marginTop: \"100px\",\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"68.25%\",\r\n    },\r\n    cardActions: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    cardContent: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}) )","import {Card, CardActions, CardContent, CardMedia, IconButton, Typography} from \"@material-ui/core\"\r\nimport {AddShoppingCart} from \"@material-ui/icons\"\r\nimport useStyles from \"../ListStyle\"\r\n\r\ntype ListItemPropsType = {\r\n    name: string,\r\n    description: string,\r\n    price: any,\r\n    id: any,\r\n    assets: {\r\n        url: string,\r\n    },\r\n    addToCart: (productId: string | number) => void\r\n}\r\n\r\nconst ListItem: React.FunctionComponent <ListItemPropsType> = (props) => {\r\n    const s = useStyles ()\r\n    //@ts-ignore\r\n    let imageUrl = props.assets[0].url\r\n\r\n    const addProductHandler = () => {\r\n        props.addToCart (props.id)\r\n    }\r\n\r\n    return (\r\n        <Card className={s.root} key={props.id} >\r\n            <CardMedia className={s.media} image={imageUrl} />\r\n            <CardContent>\r\n                <div className={s.cardContent} >\r\n                    <Typography variant=\"h5\" gutterBottom >\r\n                        {props.name}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" >\r\n                        {props.price}\r\n                    </Typography>\r\n                </div>\r\n                <Typography dangerouslySetInnerHTML={{ __html: props.description }} variant=\"body1\" color=\"textSecondary\" />\r\n            </CardContent>\r\n            <CardActions disableSpacing className={s.cardActions} >\r\n                <IconButton area-label=\"Add to cart\" onClick = { addProductHandler } >\r\n                    <AddShoppingCart />\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ListItem;","export default __webpack_public_path__ + \"static/media/Bean Eater-1s-200px.a9f85f3c.gif\";","import {createUseStyles} from 'react-jss'\r\n\r\nconst useStyles = createUseStyles ({\r\n    wrapper: {\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: 'center',\r\n    },\r\n    imgBlock: {\r\n        position: \"relative\",\r\n        paddingTop: \"100px\",\r\n        \r\n    }\r\n})\r\n\r\nexport default useStyles;","import preloader from \"../../assets/Bean Eater-1s-200px.gif\"\r\nimport useStyles from \"../Preloader/PreloaderStyle\"\r\n\r\nconst Preloader = () => {\r\n    const s = useStyles ()\r\n\r\n    return (\r\n        <div className = {s.wrapper} >\r\n            <div className = {s.imgBlock} >\r\n                <img src = {preloader} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import ListItem from \"./ListItem/ListItem\";\r\nimport { ListResponseType } from \"../../types/types\"\r\nimport useStyles from \"./ListStyle\"\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\ntype ListPropsType = {\r\n    list: Array <ListResponseType>,\r\n    addToCart: (productId: string | number) => void,\r\n}\r\n\r\nconst List: React.FunctionComponent <ListPropsType> = (props) => {\r\n    const s = useStyles ();\r\n\r\n    return (\r\n        <div>\r\n            {props.list.length\r\n            ? <div className = {s.row} >\r\n                {props.list && props.list.map (l => {\r\n                \r\n                    return (\r\n                        <ListItem addToCart = {props.addToCart} name = {l.name} description = {l.description} price = {l.price.formatted_with_symbol} id = {l.id} assets = {l.assets} key = {l.id} />\r\n                    )\r\n                })}\r\n            </div>\r\n            : <Preloader />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","import { connect } from \"react-redux\"\r\nimport { AppStateType } from \"../../redux/redux-store\"\r\nimport { getList } from \"../../redux/list-reducer\"\r\nimport { getCart } from \"../../redux/cart-reducer\"\r\nimport { addToCart } from \"../../redux/cart-reducer\"\r\nimport List from \"./List\"\r\nimport { useEffect } from \"react\";\r\nimport { ListResponseType } from \"../../types/types\"\r\n\r\ntype ListContainerPropsType = {\r\n    list: Array <ListResponseType>,\r\n    getList: () => void,\r\n    getCart: () => void,\r\n    addToCart: (productId: string | number) => void,\r\n}\r\n\r\nconst ListContainer: React.FunctionComponent <ListContainerPropsType> = (props) => {\r\n\r\n    useEffect ( () => {\r\n        props.getList ()\r\n        props.getCart ()\r\n    }, [] )\r\n    \r\n    return (\r\n        <List list = {props.list} addToCart = {props.addToCart} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        list: state.list.list\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, {getList, getCart, addToCart})(ListContainer);","import { Route } from 'react-router-dom';\nimport './App.css';\nimport CartContainer from './componets/Cart/CartContainer';\nimport Header from './componets/Header/Header';\nimport ListContaier from './componets/List/ListContaier';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <div className = \"container\" >\n        <Route exact path = \"/\" render = { () => <ListContaier /> } />\n        <Route path = \"/cart\" render = { () => <CartContainer /> } />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport CartReducer from \"./cart-reducer\";\r\nimport ListReducer from \"./list-reducer\";\r\n\r\nconst rootReducer = combineReducers ({\r\n    list: ListReducer,\r\n    cart: CartReducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType <RootReducerType>\r\n\r\nlet store = createStore (rootReducer, applyMiddleware (thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store = {store} >\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}